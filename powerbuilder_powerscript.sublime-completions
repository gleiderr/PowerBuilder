{
	"scope": "source.pb",
	"completions":
	[
		{ "trigger": "abs\tabs(n) => number absolute"					, "contents": "abs(${1:n})" },
		{ "trigger": "ceiling\tceiling(n) => value ceiling"				, "contents": "ceiling(${1:n})" },
		{ "trigger": "cpu\tcpu() => long milliseconds"					, "contents": "cpu()"},
		{ "trigger": "date\tdate(datetime|string) => date"				, "contents": "date(${1:datetime|string})"},
		{ "trigger": "datetime\tdatetime(date{, time}) => datetime"		, "contents": "datetime(${1:date}${2:, time})"},
		{ "trigger": "day\tday(date) => integer [1..31]"				, "contents": "day(${1:date})"},
		{ "trigger": "daysafter\tdaysafter(date1, date2) => long days"	, "contents": "daysafter(${1:date1}, ${2:date2})"},
		{ "trigger": "debugbreak\tdebugbreak() => none", "contents": "debugbreak()"},
		{ "trigger": "dec\tdec(string|blob) => decimal", "contents": "dec(${1:string|blob})"},
		{ "trigger": "double\tdouble(string|blob) => double", "contents": "double(${1:string|blob})"},
		{ "trigger": "fileclose\tfileclose(integer file#) => integer success", "contents": "fileclose(${1:integer file#})"},
		{ "trigger": "filecopy\tfilecopy(string source, string target, {boolean replace}) => integer success", "contents": "filecopy(${1:string source}, ${2:string target}${3:, boolean replace})"},
		{ "trigger": "fileopen\tfileopen(filename{, filemode{, fileaccess{, filelock{, writemode{, encoding}}}}}) => integer file#", "contents": "fileopen(filename${1:, filemode}${2:, fileaccess}${3:, filelock}${4:, writemode}${5:, encoding})"},
		{ "trigger": "fileread\tfileread(integer file#, string s) => integer n_bytes_read", "contents": "fileread(${1:integer file#}, ${2:string s})"},
		{ "trigger": "fileseek\tfileseek(integer file#, long position, SeekType origin) => long position", "contents": "fileseek(${1:integer file#}, ${2:long position}, ${3:SeekType origin})"},
		{ "trigger": "filewrite\tfilewrite(integer file#, string s) => integer n_bytes_write", "contents": "filewrite(${1:integer file#}, ${2:string s})"},
		{ "trigger": "fill\tfill(string s, long n) => long n", "contents": "fill(${1:string s}, ${2:long n})"},
		{ "trigger": "getapplication\tgetapplication() => Application", "contents": "getapplication()"},
		{ "trigger": "getenvironment\tgetenvironment(environment env) => integer success", "contents": "getenvironment(${1:environment env})"},
		{ "trigger": "getfileopenname\tgetfileopenname(string title, string pathname, string|string[] filename{, string extension{, string filter{, string initdir{, ulong aFlag}}}}) => integer option", "contents": "getfileopenname(${1:string title}, ${2:string pathname}, ${3:string|string[] filename}${4:, string extension}${5:, string filter}${6:, string initdir}${7:, ulong aFlag})"},
		{ "trigger": "getfilesavename\tgetfilesavename(string title, string pathname, string|string[] filename{, string extension{, string filter{, string initdir{, ulong aFlag}}}}) => integer option", "contents": "getfilesavename(${1:string title}, ${2:string pathname}, ${3:string|string[] filename}${4:, string extension}${5:, string filter}${6:, string initdir}${7:, ulong aFlag})"},
		{ "trigger": "getfocus\tgetfocus() => GraphicObject", "contents": "getfocus()"},
		{ "trigger": "getfolder\tgetfolder(string title, string directory) => integer option", "contents": "getfolder(${1:string title}, ${2:string directory})"},
		{ "trigger": "hour\thour(time t) => integer hour", "contents": "hour(${1:time t})"},
		{ "trigger": "int\tint(number n) => int", "contents": "int(${1:number n})"},
		{ "trigger": "integer\tinteger(string s) => integer value", "contents": "integer(${1:string s})"},
		{ "trigger": "isdate\tisdate(string s) => boolean", "contents": "isdate(string s)"},
		{ "trigger": "isnull\tisnull(any value) => boolean", "contents": "isnull(${1:any value})"},
		{ "trigger": "isnumber\tisnumber(string s) => boolean", "contents": "isnumber(${1:string s})"},
		{ "trigger": "istime\tistime(string s) => boolean", "contents": "istime(${1:string s})"},
		{ "trigger": "isvalid\tisvalid(object o) => boolean", "contents": "isvalid(${1:object o})"},
		{ "trigger": "keydown\tkeydown(keycode k) => boolean", "contents": "keydown(${1:keycode k})"},
		// { "trigger": "", "contents": ""},
	]
}